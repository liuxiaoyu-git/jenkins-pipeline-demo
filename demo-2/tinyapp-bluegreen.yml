---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: tinyapp
  name: tinyapp-blue
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: tinyapp
    deploymentconfig: tinyapp-blue
  strategy:
    activeDeadlineSeconds: 21600
    type: Recreate
  template:
    metadata:
      labels:
        app: tinyapp
        deploymentconfig: tinyapp-blue
    spec:
      containers:
      - image: quay.io/siamaksade/tinyapp:v1
        imagePullPolicy: Always
        name: tinyapp
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 2
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 2
          failureThreshold: 10
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers: []
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: tinyapp
  name: tinyapp-green
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: tinyapp
    deploymentconfig: tinyapp-green
  strategy:
    activeDeadlineSeconds: 21600
    type: Recreate
  template:
    metadata:
      labels:
        app: tinyapp
        deploymentconfig: tinyapp-green
    spec:
      containers:
      - image: quay.io/siamaksade/tinyapp:v1
        imagePullPolicy: Always
        name: tinyapp
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 2
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 2
          failureThreshold: 10
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tinyapp
  name: tinyapp-blue
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: tinyapp
    deploymentconfig: tinyapp-blue
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tinyapp
  name: tinyapp-green
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: tinyapp
    deploymentconfig: tinyapp-green
---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: tinyapp
  name: tinyapp
spec:
  alternateBackends:
  - name: tinyapp-green
    weight: 0
  to:
    kind: Service
    name: tinyapp-blue
    weight: 100
---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: tinyapp
  name: tinyapp-green
spec:
  to:
    kind: Service
    name: tinyapp-green
---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: tinyapp
  name: tinyapp-blue
spec:
  to:
    kind: Service
    name: tinyapp-blue
